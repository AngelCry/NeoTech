buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }

    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

/*plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}*/

repositories {
    maven {
        name 'BR Repo'
        url "http://www.teambrmodding.com/maven2/"
    }
    /*maven {
        name 'CB Maven FS'
        url "http://chickenbones.net/maven/"
    }*/
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

apply plugin: 'scala'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'idea'

ext.configFile = file "gradle.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

String APIToken = ''
if (file('APIToken').exists()) {
    APIToken = new File('APIToken').text
}

String build = System.getenv("BUILD_NUMBER")

if (build == null || build == '') {
    version = "${config.minecraft_version}-${config.mod_version}"
} else {
    version = "${config.minecraft_version}-${config.mod_version}-B" + System.getenv("BUILD_NUMBER")
}

group= "com.dyonovan.neotech" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "NeoTech"

sourceCompatibility = 1.7
targetCompatibility = 1.7

minecraft {

    version = config.minecraft_version + "-" + config.forge_version

    replaceIn "Reference.scala"
    replace "@VERSION@", "${config.mod_version}"

    runDir = "eclipse"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    //mappings = "snapshot_20141130"
    mappings = "stable_20"
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    //compile "codechicken:CodeChickenCore:${config.ccc_version}:dev"
    //compile "codechicken:CodeChickenLib:${config.CCLIB_version}:dev"
    //compile "codechicken:NotEnoughItems:${config.NEI_version}:dev"
    compile "mcp.mobius.waila:Waila:${config.WAILA_version}:dev"
    deobfCompile "mezz.jei:jei_${config.minecraft_version}:${config.JEI_version}"
    compile group: "com.teambr.bookshelf", name: "Bookshelf", version: "+", classifier: "dev", changing: true
}

task devJar(type: Jar, dependsOn: 'classes') {
    from(sourceSets.main.output) {
        include '**'
    }
    extension = 'jar'
    classifier = 'dev'
}

/*
task sourceJar(type: Jar, dependsOn: "sourceMainScala") {
    from 'build/sources/scala'
    classifier = 'sources'
}
*/

artifacts {
    archives devJar
    //archives sourceJar
}



processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes 'FMLAT': 'neotech_at.cfg'
    }
}

/*curse {
    projectId = 228643
    apiKey = APIToken
    changelog = 'Changelog: https://github.com/TeamBR-Modding/NeoTech/wiki/Changelog'
    releaseType 'release'
    addGameVersion '1.8'
    relatedProject 'bookshelf-api-library'
}*/
